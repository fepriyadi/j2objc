//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/build_result/java/com/google/common/graph/ImmutableNetwork.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonGraphImmutableNetwork")
#ifdef RESTRICT_ComGoogleCommonGraphImmutableNetwork
#define INCLUDE_ALL_ComGoogleCommonGraphImmutableNetwork 0
#else
#define INCLUDE_ALL_ComGoogleCommonGraphImmutableNetwork 1
#endif
#undef RESTRICT_ComGoogleCommonGraphImmutableNetwork

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonGraphImmutableNetwork_) && (INCLUDE_ALL_ComGoogleCommonGraphImmutableNetwork || defined(INCLUDE_ComGoogleCommonGraphImmutableNetwork))
#define ComGoogleCommonGraphImmutableNetwork_

#define RESTRICT_ComGoogleCommonGraphStandardNetwork 1
#define INCLUDE_ComGoogleCommonGraphStandardNetwork 1
#include "com/google/common/graph/StandardNetwork.h"

@class ComGoogleCommonGraphImmutableGraph;
@class ComGoogleCommonGraphNetworkBuilder;
@protocol ComGoogleCommonGraphNetwork;
@protocol JavaUtilMap;

/*!
 @brief A <code>Network</code> whose elements and structural relationships will never change.Instances of
  this class may be obtained with <code>copyOf(Network)</code>.
 <p>See the Guava User's Guide's <a href="https://github.com/google/guava/wiki/GraphsExplained#immutable-implementations">
 discussion
  of the <code>Immutable*</code> types</a> for more information on the properties and guarantees
  provided by this class.
 @author James Sexton
 @author Joshua O'Madadhain
 @author Omar Darwish
 @author Jens Nyman
 @since 20.0
 */
@interface ComGoogleCommonGraphImmutableNetwork : ComGoogleCommonGraphStandardNetwork

#pragma mark Public

- (ComGoogleCommonGraphImmutableGraph *)asGraph;

/*!
 @brief Simply returns its argument.
 */
+ (ComGoogleCommonGraphImmutableNetwork *)copyOfWithComGoogleCommonGraphImmutableNetwork:(ComGoogleCommonGraphImmutableNetwork * __nonnull)network OBJC_METHOD_FAMILY_NONE __attribute__((deprecated));

/*!
 @brief Returns an immutable copy of <code>network</code>.
 */
+ (ComGoogleCommonGraphImmutableNetwork *)copyOfWithComGoogleCommonGraphNetwork:(id<ComGoogleCommonGraphNetwork> __nonnull)network OBJC_METHOD_FAMILY_NONE;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initPackagePrivateWithComGoogleCommonGraphNetworkBuilder:(ComGoogleCommonGraphNetworkBuilder * __nonnull)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initPackagePrivateWithComGoogleCommonGraphNetworkBuilder:(ComGoogleCommonGraphNetworkBuilder * __nonnull)arg0
                                                                   withJavaUtilMap:(id<JavaUtilMap> __nonnull)arg1
                                                                   withJavaUtilMap:(id<JavaUtilMap> __nonnull)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonGraphImmutableNetwork)

FOUNDATION_EXPORT ComGoogleCommonGraphImmutableNetwork *ComGoogleCommonGraphImmutableNetwork_copyOfWithComGoogleCommonGraphNetwork_(id<ComGoogleCommonGraphNetwork> network);

FOUNDATION_EXPORT ComGoogleCommonGraphImmutableNetwork *ComGoogleCommonGraphImmutableNetwork_copyOfWithComGoogleCommonGraphImmutableNetwork_(ComGoogleCommonGraphImmutableNetwork *network);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonGraphImmutableNetwork)

#endif

#if !defined (ComGoogleCommonGraphImmutableNetwork_Builder_) && (INCLUDE_ALL_ComGoogleCommonGraphImmutableNetwork || defined(INCLUDE_ComGoogleCommonGraphImmutableNetwork_Builder))
#define ComGoogleCommonGraphImmutableNetwork_Builder_

@class ComGoogleCommonGraphEndpointPair;
@class ComGoogleCommonGraphImmutableNetwork;
@class ComGoogleCommonGraphNetworkBuilder;

/*!
 @brief A builder for creating <code>ImmutableNetwork</code> instances, especially <code>static final</code>
  networks.Example:
  
 @code
 static final ImmutableNetwork<City, Train> TRAIN_NETWORK =
      NetworkBuilder.undirected()
          .allowsParallelEdges(true)
          .
 <City, Train>immutable()
          .addEdge(PARIS, BRUSSELS, Thalys.trainNumber("1111"))
          .addEdge(PARIS, BRUSSELS, RegionalTrain.trainNumber("2222"))
          .addEdge(LONDON, PARIS, Eurostar.trainNumber("3333"))
          .addEdge(LONDON, BRUSSELS, Eurostar.trainNumber("4444"))
          .addNode(REYKJAVIK)
          .build(); 
 
@endcode
  
 <p>Builder instances can be reused; it is safe to call <code>build</code> multiple times to build
  multiple networks in series. Each new network contains all the elements of the ones created
  before it.
 @since 28.0
 */
@interface ComGoogleCommonGraphImmutableNetwork_Builder : NSObject

#pragma mark Public

/*!
 @brief Adds <code>edge</code> connecting <code>endpoints</code>.In an undirected network, <code>edge</code> will
  also connect <code>nodeV</code> to <code>nodeU</code>.
 <p>If this network is directed, <code>edge</code> will be directed in this network; if it is
  undirected, <code>edge</code> will be undirected in this network. 
 <p>If this network is directed, <code>endpoints</code> must be ordered. 
 <p><b><code>edge</code> must be unique to this network</b>, just as a <code>Map</code> key must be. It
  must also be non-null. 
 <p>If either or both endpoints are not already present in this network, this method will
  silently <code>add</code> each missing endpoint to the network. 
 <p>If <code>edge</code> already connects an endpoint pair equal to <code>endpoints</code>, then this
  method will have no effect.
 @return this <code>Builder</code> object
 @throw IllegalArgumentExceptionif <code>edge</code> already exists in the network and connects
      some other endpoint pair that is not equal to <code>endpoints</code>
 @throw IllegalArgumentExceptionif the introduction of the edge would violate <code>allowsParallelEdges()</code>
  or <code>allowsSelfLoops()</code>
 @throw IllegalArgumentExceptionif the endpoints are unordered and the network is directed
 */
- (ComGoogleCommonGraphImmutableNetwork_Builder *)addEdgeWithComGoogleCommonGraphEndpointPair:(ComGoogleCommonGraphEndpointPair * __nonnull)endpoints
                                                                                       withId:(id __nonnull)edge;

/*!
 @brief Adds <code>edge</code> connecting <code>nodeU</code> to <code>nodeV</code>.
 <p>If the network is directed, <code>edge</code> will be directed in this network; otherwise, it
  will be undirected. 
 <p><b><code>edge</code> must be unique to this network</b>, just as a <code>Map</code> key must be. It
  must also be non-null. 
 <p>If <code>nodeU</code> and <code>nodeV</code> are not already present in this network, this method
  will silently <code>add</code> <code>nodeU</code> and <code>nodeV</code> to the network. 
 <p>If <code>edge</code> already connects <code>nodeU</code> to <code>nodeV</code> (in the specified order if
  this network <code>isDirected()</code>, else in any order), then this method will have no effect.
 @return this <code>Builder</code> object
 @throw IllegalArgumentExceptionif <code>edge</code> already exists in the network and does not
      connect <code>nodeU</code> to <code>nodeV</code>
 @throw IllegalArgumentExceptionif the introduction of the edge would violate <code>allowsParallelEdges()</code>
  or <code>allowsSelfLoops()</code>
 */
- (ComGoogleCommonGraphImmutableNetwork_Builder *)addEdgeWithId:(id __nonnull)nodeU
                                                         withId:(id __nonnull)nodeV
                                                         withId:(id __nonnull)edge;

/*!
 @brief Adds <code>node</code> if it is not already present.
 <p><b>Nodes must be unique</b>, just as <code>Map</code> keys must be. They must also be non-null.
 @return this <code>Builder</code> object
 */
- (ComGoogleCommonGraphImmutableNetwork_Builder *)addNodeWithId:(id __nonnull)node;

/*!
 @brief Returns a newly-created <code>ImmutableNetwork</code> based on the contents of this <code>Builder</code>
 .
 */
- (ComGoogleCommonGraphImmutableNetwork *)build;

#pragma mark Package-Private

- (instancetype __nonnull)initWithComGoogleCommonGraphNetworkBuilder:(ComGoogleCommonGraphNetworkBuilder * __nonnull)networkBuilder;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonGraphImmutableNetwork_Builder)

FOUNDATION_EXPORT void ComGoogleCommonGraphImmutableNetwork_Builder_initWithComGoogleCommonGraphNetworkBuilder_(ComGoogleCommonGraphImmutableNetwork_Builder *self, ComGoogleCommonGraphNetworkBuilder *networkBuilder);

FOUNDATION_EXPORT ComGoogleCommonGraphImmutableNetwork_Builder *new_ComGoogleCommonGraphImmutableNetwork_Builder_initWithComGoogleCommonGraphNetworkBuilder_(ComGoogleCommonGraphNetworkBuilder *networkBuilder) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonGraphImmutableNetwork_Builder *create_ComGoogleCommonGraphImmutableNetwork_Builder_initWithComGoogleCommonGraphNetworkBuilder_(ComGoogleCommonGraphNetworkBuilder *networkBuilder);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonGraphImmutableNetwork_Builder)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonGraphImmutableNetwork")
