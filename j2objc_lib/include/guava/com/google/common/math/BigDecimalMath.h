//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/build_result/java/com/google/common/math/BigDecimalMath.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonMathBigDecimalMath")
#ifdef RESTRICT_ComGoogleCommonMathBigDecimalMath
#define INCLUDE_ALL_ComGoogleCommonMathBigDecimalMath 0
#else
#define INCLUDE_ALL_ComGoogleCommonMathBigDecimalMath 1
#endif
#undef RESTRICT_ComGoogleCommonMathBigDecimalMath

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonMathBigDecimalMath_) && (INCLUDE_ALL_ComGoogleCommonMathBigDecimalMath || defined(INCLUDE_ComGoogleCommonMathBigDecimalMath))
#define ComGoogleCommonMathBigDecimalMath_

@class JavaMathBigDecimal;
@class JavaMathRoundingMode;

/*!
 @brief A class for arithmetic on <code>BigDecimal</code> that is not covered by its built-in methods.
 @author Louis Wasserman
 @since 30.0
 */
@interface ComGoogleCommonMathBigDecimalMath : NSObject

#pragma mark Public

/*!
 @brief Returns <code>x</code>, rounded to a <code>double</code> with the specified rounding mode.If <code>x</code>
  is precisely representable as a <code>double</code>, its <code>double</code> value will be returned;
  otherwise, the rounding will choose between the two nearest representable values with <code>mode</code>
 .
 <p>For the case of <code>RoundingMode.HALF_DOWN</code>, <code>HALF_UP</code>, and <code>HALF_EVEN</code>,
  infinite <code>double</code> values are considered infinitely far away. For example, 2^2000 is not
  representable as a double, but <code>roundToDouble(BigDecimal.valueOf(2).pow(2000), HALF_UP)</code>
  will return <code>Double.MAX_VALUE</code>, not <code>Double.POSITIVE_INFINITY</code>.
  
 <p>For the case of <code>RoundingMode.HALF_EVEN</code>, this implementation uses the IEEE 754
  default rounding mode: if the two nearest representable values are equally near, the one with
  the least significant bit zero is chosen. (In such cases, both of the nearest representable
  values are even integers; this method returns the one that is a multiple of a greater power of
  two.)
 @throw ArithmeticExceptionif <code>mode</code> is <code>RoundingMode.UNNECESSARY</code> and <code>x</code>
      is not precisely representable as a <code>double</code>
 @since 30.0
 */
+ (jdouble)roundToDoubleWithJavaMathBigDecimal:(JavaMathBigDecimal * __nonnull)x
                      withJavaMathRoundingMode:(JavaMathRoundingMode * __nonnull)mode;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonMathBigDecimalMath)

FOUNDATION_EXPORT jdouble ComGoogleCommonMathBigDecimalMath_roundToDoubleWithJavaMathBigDecimal_withJavaMathRoundingMode_(JavaMathBigDecimal *x, JavaMathRoundingMode *mode);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonMathBigDecimalMath)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonMathBigDecimalMath")
