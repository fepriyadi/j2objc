//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/guava/build_result/java/com/google/common/util/concurrent/Internal.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentInternal")
#ifdef RESTRICT_ComGoogleCommonUtilConcurrentInternal
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentInternal 0
#else
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentInternal 1
#endif
#undef RESTRICT_ComGoogleCommonUtilConcurrentInternal

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonUtilConcurrentInternal_) && (INCLUDE_ALL_ComGoogleCommonUtilConcurrentInternal || defined(INCLUDE_ComGoogleCommonUtilConcurrentInternal))
#define ComGoogleCommonUtilConcurrentInternal_

@class JavaTimeDuration;

/*!
 @brief This class is for <code>com.google.common.util.concurrent</code> use only!
 */
@interface ComGoogleCommonUtilConcurrentInternal : NSObject

#pragma mark Package-Private

/*!
 @brief Returns the number of nanoseconds of the given duration without throwing or overflowing.
 <p>Instead of throwing <code>ArithmeticException</code>, this method silently saturates to either 
 <code>Long.MAX_VALUE</code> or <code>Long.MIN_VALUE</code>. This behavior can be useful when decomposing
  a duration in order to call a legacy API which requires a <code>long, TimeUnit</code> pair.
 */
+ (jlong)toNanosSaturatedWithJavaTimeDuration:(JavaTimeDuration * __nonnull)duration;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentInternal)

FOUNDATION_EXPORT jlong ComGoogleCommonUtilConcurrentInternal_toNanosSaturatedWithJavaTimeDuration_(JavaTimeDuration *duration);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentInternal)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentInternal")
