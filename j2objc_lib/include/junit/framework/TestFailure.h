//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/junit/build_result/java/junit/framework/TestFailure.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JunitFrameworkTestFailure")
#ifdef RESTRICT_JunitFrameworkTestFailure
#define INCLUDE_ALL_JunitFrameworkTestFailure 0
#else
#define INCLUDE_ALL_JunitFrameworkTestFailure 1
#endif
#undef RESTRICT_JunitFrameworkTestFailure

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JunitFrameworkTestFailure_) && (INCLUDE_ALL_JunitFrameworkTestFailure || defined(INCLUDE_JunitFrameworkTestFailure))
#define JunitFrameworkTestFailure_

@class JavaLangThrowable;
@protocol JunitFrameworkTest;

/*!
 @brief A <code>TestFailure</code> collects a failed test together with
  the caught exception.
 - seealso: TestResult
 */
@interface JunitFrameworkTestFailure : NSObject {
 @public
  id<JunitFrameworkTest> fFailedTest_;
  JavaLangThrowable *fThrownException_;
}

#pragma mark Public

/*!
 @brief Constructs a TestFailure with the given test and exception.
 */
- (instancetype __nonnull)initWithJunitFrameworkTest:(id<JunitFrameworkTest>)failedTest
                               withJavaLangThrowable:(JavaLangThrowable *)thrownException;

/*!
 @brief Returns a String containing the message from the thrown exception.
 */
- (NSString *)exceptionMessage;

/*!
 @brief Gets the failed test.
 */
- (id<JunitFrameworkTest>)failedTest;

/*!
 @brief Returns <code>true</code> if the error is considered a failure
  (i.e.if it is an instance of <code>AssertionFailedError</code>),
  <code>false</code> otherwise.
 */
- (jboolean)isFailure;

/*!
 @brief Gets the thrown exception.
 */
- (JavaLangThrowable *)thrownException;

/*!
 @brief Returns a short description of the failure.
 */
- (NSString *)description;

/*!
 @brief Returns a String containing the stack trace of the error
  thrown by TestFailure.
 */
- (NSString *)trace;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JunitFrameworkTestFailure)

J2OBJC_FIELD_SETTER(JunitFrameworkTestFailure, fFailedTest_, id<JunitFrameworkTest>)
J2OBJC_FIELD_SETTER(JunitFrameworkTestFailure, fThrownException_, JavaLangThrowable *)

FOUNDATION_EXPORT void JunitFrameworkTestFailure_initWithJunitFrameworkTest_withJavaLangThrowable_(JunitFrameworkTestFailure *self, id<JunitFrameworkTest> failedTest, JavaLangThrowable *thrownException);

FOUNDATION_EXPORT JunitFrameworkTestFailure *new_JunitFrameworkTestFailure_initWithJunitFrameworkTest_withJavaLangThrowable_(id<JunitFrameworkTest> failedTest, JavaLangThrowable *thrownException) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JunitFrameworkTestFailure *create_JunitFrameworkTestFailure_initWithJunitFrameworkTest_withJavaLangThrowable_(id<JunitFrameworkTest> failedTest, JavaLangThrowable *thrownException);

J2OBJC_TYPE_LITERAL_HEADER(JunitFrameworkTestFailure)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_JunitFrameworkTestFailure")
