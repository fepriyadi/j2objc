//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/junit/build_result/java/org/junit/TestCouldNotBeSkippedException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitTestCouldNotBeSkippedException")
#ifdef RESTRICT_OrgJunitTestCouldNotBeSkippedException
#define INCLUDE_ALL_OrgJunitTestCouldNotBeSkippedException 0
#else
#define INCLUDE_ALL_OrgJunitTestCouldNotBeSkippedException 1
#endif
#undef RESTRICT_OrgJunitTestCouldNotBeSkippedException

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgJunitTestCouldNotBeSkippedException_) && (INCLUDE_ALL_OrgJunitTestCouldNotBeSkippedException || defined(INCLUDE_OrgJunitTestCouldNotBeSkippedException))
#define OrgJunitTestCouldNotBeSkippedException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@class JavaLangThrowable;
@class OrgJunitInternalAssumptionViolatedException;

/*!
 @brief Indicates that a test that indicated that it should be skipped could not be skipped.
 This can be thrown if a test uses the methods in <code>Assume</code> to indicate that
  it should be skipped, but before processing of the test was completed, other failures
  occured.
 - seealso: org.junit.Assume
 @since 4.13
 */
@interface OrgJunitTestCouldNotBeSkippedException : JavaLangRuntimeException

#pragma mark Public

/*!
 @brief Creates an instance using the given assumption failure.
 */
- (instancetype __nonnull)initWithOrgJunitInternalAssumptionViolatedException:(OrgJunitInternalAssumptionViolatedException *)cause;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1
                               withBoolean:(jboolean)arg2
                               withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitTestCouldNotBeSkippedException)

FOUNDATION_EXPORT void OrgJunitTestCouldNotBeSkippedException_initWithOrgJunitInternalAssumptionViolatedException_(OrgJunitTestCouldNotBeSkippedException *self, OrgJunitInternalAssumptionViolatedException *cause);

FOUNDATION_EXPORT OrgJunitTestCouldNotBeSkippedException *new_OrgJunitTestCouldNotBeSkippedException_initWithOrgJunitInternalAssumptionViolatedException_(OrgJunitInternalAssumptionViolatedException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitTestCouldNotBeSkippedException *create_OrgJunitTestCouldNotBeSkippedException_initWithOrgJunitInternalAssumptionViolatedException_(OrgJunitInternalAssumptionViolatedException *cause);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitTestCouldNotBeSkippedException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgJunitTestCouldNotBeSkippedException")
