//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/junit/build_result/java/org/junit/experimental/categories/ExcludeCategories.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitExperimentalCategoriesExcludeCategories")
#ifdef RESTRICT_OrgJunitExperimentalCategoriesExcludeCategories
#define INCLUDE_ALL_OrgJunitExperimentalCategoriesExcludeCategories 0
#else
#define INCLUDE_ALL_OrgJunitExperimentalCategoriesExcludeCategories 1
#endif
#undef RESTRICT_OrgJunitExperimentalCategoriesExcludeCategories

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgJunitExperimentalCategoriesExcludeCategories_) && (INCLUDE_ALL_OrgJunitExperimentalCategoriesExcludeCategories || defined(INCLUDE_OrgJunitExperimentalCategoriesExcludeCategories))
#define OrgJunitExperimentalCategoriesExcludeCategories_

#define RESTRICT_OrgJunitExperimentalCategoriesCategoryFilterFactory 1
#define INCLUDE_OrgJunitExperimentalCategoriesCategoryFilterFactory 1
#include "org/junit/experimental/categories/CategoryFilterFactory.h"

@class OrgJunitRunnerManipulationFilter;
@protocol JavaUtilList;

/*!
 @brief <code>org.junit.runner.FilterFactory</code> to exclude categories.
 The <code>Filter</code> that is created will filter out tests that are categorized with any of the
  given categories.
  Usage from command line: 
 <code>
      --filter=org.junit.experimental.categories.ExcludeCategories=pkg.of.Cat1,pkg.of.Cat2 
 </code>
  Usage from API: 
 <code>
      new ExcludeCategories().createFilter(Cat1.class, Cat2.class); 
 </code>
 */
@interface OrgJunitExperimentalCategoriesExcludeCategories : OrgJunitExperimentalCategoriesCategoryFilterFactory

#pragma mark Public

- (instancetype __nonnull)init;

#pragma mark Protected

/*!
 @brief Creates a <code>Filter</code> which is only passed by tests that are
  not categorized with any of the specified categories.
 @param categories Category classes.
 */
- (OrgJunitRunnerManipulationFilter *)createFilterWithJavaUtilList:(id<JavaUtilList>)categories;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initPackagePrivate NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitExperimentalCategoriesExcludeCategories)

FOUNDATION_EXPORT void OrgJunitExperimentalCategoriesExcludeCategories_init(OrgJunitExperimentalCategoriesExcludeCategories *self);

FOUNDATION_EXPORT OrgJunitExperimentalCategoriesExcludeCategories *new_OrgJunitExperimentalCategoriesExcludeCategories_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitExperimentalCategoriesExcludeCategories *create_OrgJunitExperimentalCategoriesExcludeCategories_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitExperimentalCategoriesExcludeCategories)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgJunitExperimentalCategoriesExcludeCategories")
