//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/junit/build_result/java/org/junit/internal/Classes.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitInternalClasses")
#ifdef RESTRICT_OrgJunitInternalClasses
#define INCLUDE_ALL_OrgJunitInternalClasses 0
#else
#define INCLUDE_ALL_OrgJunitInternalClasses 1
#endif
#undef RESTRICT_OrgJunitInternalClasses

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgJunitInternalClasses_) && (INCLUDE_ALL_OrgJunitInternalClasses || defined(INCLUDE_OrgJunitInternalClasses))
#define OrgJunitInternalClasses_

@class IOSClass;

/*!
 @brief Miscellaneous functions dealing with classes.
 */
@interface OrgJunitInternalClasses : NSObject

#pragma mark Public

/*!
 @brief Do not instantiate.
 */
- (instancetype __nonnull)init __attribute__((deprecated));

/*!
 @brief Returns Class.forName for <code>className</code> using the current thread's class loader.
 If the current thread does not have a class loader, falls back to the class loader for 
 <code>Classes</code>.
 @param className_ Name of the class.
 @throw ClassNotFoundException
 */
+ (IOSClass *)getClassWithNSString:(NSString *)className_;

/*!
 @brief Returns Class.forName for <code>className</code> using the current thread's class loader.
 If the current thread does not have a class loader, falls back to the class loader for the
  passed-in class.
 @param className_ Name of the class.
 @param callingClass Class that is requesting a the class
 @throw ClassNotFoundException
 @since 4.13
 */
+ (IOSClass *)getClassWithNSString:(NSString *)className_
                      withIOSClass:(IOSClass *)callingClass;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitInternalClasses)

FOUNDATION_EXPORT void OrgJunitInternalClasses_init(OrgJunitInternalClasses *self);

FOUNDATION_EXPORT OrgJunitInternalClasses *new_OrgJunitInternalClasses_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitInternalClasses *create_OrgJunitInternalClasses_init(void);

FOUNDATION_EXPORT IOSClass *OrgJunitInternalClasses_getClassWithNSString_(NSString *className_);

FOUNDATION_EXPORT IOSClass *OrgJunitInternalClasses_getClassWithNSString_withIOSClass_(NSString *className_, IOSClass *callingClass);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitInternalClasses)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgJunitInternalClasses")
