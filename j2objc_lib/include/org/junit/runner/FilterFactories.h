//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/junit/build_result/java/org/junit/runner/FilterFactories.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitRunnerFilterFactories")
#ifdef RESTRICT_OrgJunitRunnerFilterFactories
#define INCLUDE_ALL_OrgJunitRunnerFilterFactories 0
#else
#define INCLUDE_ALL_OrgJunitRunnerFilterFactories 1
#endif
#undef RESTRICT_OrgJunitRunnerFilterFactories

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgJunitRunnerFilterFactories_) && (INCLUDE_ALL_OrgJunitRunnerFilterFactories || defined(INCLUDE_OrgJunitRunnerFilterFactories))
#define OrgJunitRunnerFilterFactories_

@class IOSClass;
@class OrgJunitRunnerFilterFactoryParams;
@class OrgJunitRunnerManipulationFilter;
@class OrgJunitRunnerRequest;
@protocol OrgJunitRunnerFilterFactory;

/*!
 @brief Utility class whose methods create a <code>FilterFactory</code>.
 */
@interface OrgJunitRunnerFilterFactories : NSObject

#pragma mark Public

/*!
 @brief Creates a <code>Filter</code>.
 @param filterFactoryClass The class of the <code>FilterFactory</code>
 @param params The arguments to the <code>FilterFactory</code>
 */
+ (OrgJunitRunnerManipulationFilter *)createFilterWithIOSClass:(IOSClass *)filterFactoryClass
                         withOrgJunitRunnerFilterFactoryParams:(OrgJunitRunnerFilterFactoryParams *)params;

/*!
 @brief Creates a <code>Filter</code>.
 @param filterFactoryFqcn The fully qualified class name of the <code>FilterFactory</code>
 @param params The arguments to the <code>FilterFactory</code>
 */
+ (OrgJunitRunnerManipulationFilter *)createFilterWithNSString:(NSString *)filterFactoryFqcn
                         withOrgJunitRunnerFilterFactoryParams:(OrgJunitRunnerFilterFactoryParams *)params;

/*!
 @brief Creates a <code>Filter</code>.
 A filter specification is of the form "package.of.FilterFactory=args-to-filter-factory" or
  "package.of.FilterFactory".
 @param request the request that will be filtered
 @param filterSpec the filter specification
 @throw org.junit.runner.FilterFactory.FilterNotCreatedException
 */
+ (OrgJunitRunnerManipulationFilter *)createFilterFromFilterSpecWithOrgJunitRunnerRequest:(OrgJunitRunnerRequest *)request
                                                                             withNSString:(NSString *)filterSpec;

#pragma mark Package-Private

- (instancetype __nonnull)initPackagePrivate;

+ (id<OrgJunitRunnerFilterFactory>)createFilterFactoryWithIOSClass:(IOSClass *)filterFactoryClass;

+ (id<OrgJunitRunnerFilterFactory>)createFilterFactoryWithNSString:(NSString *)filterFactoryFqcn;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitRunnerFilterFactories)

FOUNDATION_EXPORT void OrgJunitRunnerFilterFactories_initPackagePrivate(OrgJunitRunnerFilterFactories *self);

FOUNDATION_EXPORT OrgJunitRunnerFilterFactories *new_OrgJunitRunnerFilterFactories_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitRunnerFilterFactories *create_OrgJunitRunnerFilterFactories_initPackagePrivate(void);

FOUNDATION_EXPORT OrgJunitRunnerManipulationFilter *OrgJunitRunnerFilterFactories_createFilterFromFilterSpecWithOrgJunitRunnerRequest_withNSString_(OrgJunitRunnerRequest *request, NSString *filterSpec);

FOUNDATION_EXPORT OrgJunitRunnerManipulationFilter *OrgJunitRunnerFilterFactories_createFilterWithNSString_withOrgJunitRunnerFilterFactoryParams_(NSString *filterFactoryFqcn, OrgJunitRunnerFilterFactoryParams *params);

FOUNDATION_EXPORT OrgJunitRunnerManipulationFilter *OrgJunitRunnerFilterFactories_createFilterWithIOSClass_withOrgJunitRunnerFilterFactoryParams_(IOSClass *filterFactoryClass, OrgJunitRunnerFilterFactoryParams *params);

FOUNDATION_EXPORT id<OrgJunitRunnerFilterFactory> OrgJunitRunnerFilterFactories_createFilterFactoryWithNSString_(NSString *filterFactoryFqcn);

FOUNDATION_EXPORT id<OrgJunitRunnerFilterFactory> OrgJunitRunnerFilterFactories_createFilterFactoryWithIOSClass_(IOSClass *filterFactoryClass);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitRunnerFilterFactories)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgJunitRunnerFilterFactories")
