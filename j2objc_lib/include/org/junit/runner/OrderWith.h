//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/junit/build_result/java/org/junit/runner/OrderWith.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitRunnerOrderWith")
#ifdef RESTRICT_OrgJunitRunnerOrderWith
#define INCLUDE_ALL_OrgJunitRunnerOrderWith 0
#else
#define INCLUDE_ALL_OrgJunitRunnerOrderWith 1
#endif
#undef RESTRICT_OrgJunitRunnerOrderWith

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgJunitRunnerOrderWith_) && (INCLUDE_ALL_OrgJunitRunnerOrderWith || defined(INCLUDE_OrgJunitRunnerOrderWith))
#define OrgJunitRunnerOrderWith_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;

/*!
 @brief When a test class is annotated with <code>&#064;OrderWith</code> or extends a class annotated
  with <code>&#064;OrderWith</code>, JUnit will order the tests in the test class (and child
  test classes, if any) using the ordering defined by the <code>Ordering</code> class.
 @since 4.13
 */
@protocol OrgJunitRunnerOrderWith < JavaLangAnnotationAnnotation >

@property (readonly) IOSClass *value;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface OrgJunitRunnerOrderWith : NSObject < OrgJunitRunnerOrderWith > {
 @public
  IOSClass *value_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitRunnerOrderWith)

FOUNDATION_EXPORT id<OrgJunitRunnerOrderWith> create_OrgJunitRunnerOrderWith(IOSClass *value);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitRunnerOrderWith)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgJunitRunnerOrderWith")
