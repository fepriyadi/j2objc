//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/junit/build_result/java/org/junit/runner/manipulation/Sorter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitRunnerManipulationSorter")
#ifdef RESTRICT_OrgJunitRunnerManipulationSorter
#define INCLUDE_ALL_OrgJunitRunnerManipulationSorter 0
#else
#define INCLUDE_ALL_OrgJunitRunnerManipulationSorter 1
#endif
#undef RESTRICT_OrgJunitRunnerManipulationSorter

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgJunitRunnerManipulationSorter_) && (INCLUDE_ALL_OrgJunitRunnerManipulationSorter || defined(INCLUDE_OrgJunitRunnerManipulationSorter))
#define OrgJunitRunnerManipulationSorter_

#define RESTRICT_OrgJunitRunnerManipulationOrdering 1
#define INCLUDE_OrgJunitRunnerManipulationOrdering 1
#include "org/junit/runner/manipulation/Ordering.h"

#define RESTRICT_JavaUtilComparator 1
#define INCLUDE_JavaUtilComparator 1
#include "java/util/Comparator.h"

@class OrgJunitRunnerDescription;
@protocol JavaUtilCollection;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilFunctionToDoubleFunction;
@protocol JavaUtilFunctionToIntFunction;
@protocol JavaUtilFunctionToLongFunction;
@protocol JavaUtilList;

/*!
 @brief A <code>Sorter</code> orders tests.In general you will not need
  to use a <code>Sorter</code> directly.
 Instead, use 
 <code>org.junit.runner.Request.sortWith(Comparator)</code>.
 @since 4.0
 */
@interface OrgJunitRunnerManipulationSorter : OrgJunitRunnerManipulationOrdering < JavaUtilComparator >
@property (readonly, class, strong) OrgJunitRunnerManipulationSorter *NULL_ NS_SWIFT_NAME(NULL_);

#pragma mark Public

/*!
 @brief Creates a <code>Sorter</code> that uses <code>comparator</code>
  to sort tests
 @param comparator the <code>Comparator</code>  to use when sorting tests
 @since 4.0
 */
- (instancetype __nonnull)initWithJavaUtilComparator:(id<JavaUtilComparator>)comparator;

/*!
 @brief Sorts the tests in <code>target</code> using <code>comparator</code>.
 @since 4.0
 */
- (void)applyWithId:(id)target;

- (jint)compareWithId:(OrgJunitRunnerDescription *)o1
               withId:(OrgJunitRunnerDescription *)o2;

#pragma mark Protected

/*!
 @since 4.13
 */
- (id<JavaUtilList>)orderItemsWithJavaUtilCollection:(id<JavaUtilCollection>)descriptions;

#pragma mark Package-Private

/*!
 @since 4.13
 */
- (jboolean)validateOrderingIsCorrect;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgJunitRunnerManipulationSorter)

/*!
 @brief NULL is a <code>Sorter</code> that leaves elements in an undefined order
 */
inline OrgJunitRunnerManipulationSorter *OrgJunitRunnerManipulationSorter_get_NULL(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgJunitRunnerManipulationSorter *OrgJunitRunnerManipulationSorter_NULL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJunitRunnerManipulationSorter, NULL, OrgJunitRunnerManipulationSorter *)

FOUNDATION_EXPORT void OrgJunitRunnerManipulationSorter_initWithJavaUtilComparator_(OrgJunitRunnerManipulationSorter *self, id<JavaUtilComparator> comparator);

FOUNDATION_EXPORT OrgJunitRunnerManipulationSorter *new_OrgJunitRunnerManipulationSorter_initWithJavaUtilComparator_(id<JavaUtilComparator> comparator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitRunnerManipulationSorter *create_OrgJunitRunnerManipulationSorter_initWithJavaUtilComparator_(id<JavaUtilComparator> comparator);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitRunnerManipulationSorter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgJunitRunnerManipulationSorter")
