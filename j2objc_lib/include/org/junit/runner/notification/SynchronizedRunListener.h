//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/junit/build_result/java/org/junit/runner/notification/SynchronizedRunListener.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitRunnerNotificationSynchronizedRunListener")
#ifdef RESTRICT_OrgJunitRunnerNotificationSynchronizedRunListener
#define INCLUDE_ALL_OrgJunitRunnerNotificationSynchronizedRunListener 0
#else
#define INCLUDE_ALL_OrgJunitRunnerNotificationSynchronizedRunListener 1
#endif
#undef RESTRICT_OrgJunitRunnerNotificationSynchronizedRunListener

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgJunitRunnerNotificationSynchronizedRunListener_) && (INCLUDE_ALL_OrgJunitRunnerNotificationSynchronizedRunListener || defined(INCLUDE_OrgJunitRunnerNotificationSynchronizedRunListener))
#define OrgJunitRunnerNotificationSynchronizedRunListener_

#define RESTRICT_OrgJunitRunnerNotificationRunListener 1
#define INCLUDE_OrgJunitRunnerNotificationRunListener 1
#include "org/junit/runner/notification/RunListener.h"

@class OrgJunitRunnerDescription;
@class OrgJunitRunnerNotificationFailure;
@class OrgJunitRunnerResult;

/*!
 @brief Thread-safe decorator for <code>RunListener</code> implementations that synchronizes
  calls to the delegate.
 <p>This class synchronizes all listener calls on a RunNotifier instance. This is done because
  prior to JUnit 4.12, all listeners were called in a synchronized block in RunNotifier,
  so no two listeners were ever called concurrently. If we instead made the methods here
  synchronized, clients that added multiple listeners that called common code might see
  issues due to the reduced synchronization.
 @author Tibor Digana (tibor17)
 @author Kevin Cooney (kcooney)
 @since 4.12
 - seealso: RunNotifier
 */
@interface OrgJunitRunnerNotificationSynchronizedRunListener : OrgJunitRunnerNotificationRunListener

#pragma mark Public

- (jboolean)isEqual:(id)other;

- (NSUInteger)hash;

- (void)testAssumptionFailureWithOrgJunitRunnerNotificationFailure:(OrgJunitRunnerNotificationFailure *)failure;

- (void)testFailureWithOrgJunitRunnerNotificationFailure:(OrgJunitRunnerNotificationFailure *)failure;

- (void)testFinishedWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

- (void)testIgnoredWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

- (void)testRunFinishedWithOrgJunitRunnerResult:(OrgJunitRunnerResult *)result;

- (void)testRunStartedWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

- (void)testStartedWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

/*!
 @brief <p>
  Synchronized decorator for <code>RunListener.testSuiteFinished(Description)</code>.
 @param description_ the description of the test suite that just ran.
 @throw Exception
 @since 4.13
 */
- (void)testSuiteFinishedWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

/*!
 @brief <p>
  Synchronized decorator for <code>RunListener.testSuiteStarted(Description)</code>.
 @param description_ the description of the test suite that is about to be run                     (generally a class name).
 @throw Exceptionif any occurs.
 @since 4.13
 */
- (void)testSuiteStartedWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype __nonnull)initPackagePrivateWithOrgJunitRunnerNotificationRunListener:(OrgJunitRunnerNotificationRunListener *)listener
                                                                               withId:(id)monitor;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitRunnerNotificationSynchronizedRunListener)

FOUNDATION_EXPORT void OrgJunitRunnerNotificationSynchronizedRunListener_initPackagePrivateWithOrgJunitRunnerNotificationRunListener_withId_(OrgJunitRunnerNotificationSynchronizedRunListener *self, OrgJunitRunnerNotificationRunListener *listener, id monitor);

FOUNDATION_EXPORT OrgJunitRunnerNotificationSynchronizedRunListener *new_OrgJunitRunnerNotificationSynchronizedRunListener_initPackagePrivateWithOrgJunitRunnerNotificationRunListener_withId_(OrgJunitRunnerNotificationRunListener *listener, id monitor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitRunnerNotificationSynchronizedRunListener *create_OrgJunitRunnerNotificationSynchronizedRunListener_initPackagePrivateWithOrgJunitRunnerNotificationRunListener_withId_(OrgJunitRunnerNotificationRunListener *listener, id monitor);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitRunnerNotificationSynchronizedRunListener)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgJunitRunnerNotificationSynchronizedRunListener")
