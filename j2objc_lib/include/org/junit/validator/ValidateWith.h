//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/tball/src/j2objc/junit/build_result/java/org/junit/validator/ValidateWith.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitValidatorValidateWith")
#ifdef RESTRICT_OrgJunitValidatorValidateWith
#define INCLUDE_ALL_OrgJunitValidatorValidateWith 0
#else
#define INCLUDE_ALL_OrgJunitValidatorValidateWith 1
#endif
#undef RESTRICT_OrgJunitValidatorValidateWith

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgJunitValidatorValidateWith_) && (INCLUDE_ALL_OrgJunitValidatorValidateWith || defined(INCLUDE_OrgJunitValidatorValidateWith))
#define OrgJunitValidatorValidateWith_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;

/*!
 @brief Allows for an <code>AnnotationValidator</code> to be attached to an annotation.
 <p>When attached to an annotation, the validator will be instantiated and invoked
  by the <code>org.junit.runners.ParentRunner</code>.</p>
 @since 4.12
 */
@protocol OrgJunitValidatorValidateWith < JavaLangAnnotationAnnotation >

@property (readonly) IOSClass *value;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface OrgJunitValidatorValidateWith : NSObject < OrgJunitValidatorValidateWith > {
 @public
  IOSClass *value_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitValidatorValidateWith)

FOUNDATION_EXPORT id<OrgJunitValidatorValidateWith> create_OrgJunitValidatorValidateWith(IOSClass *value);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitValidatorValidateWith)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_OrgJunitValidatorValidateWith")
